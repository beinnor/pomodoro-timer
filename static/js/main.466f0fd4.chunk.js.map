{"version":3,"sources":["assets/alarm-sound.mp3","assets/alarm-sound.ogg","assets/captions.vtt","components/app/header/Header.jsx","components/app/footer/Footer.jsx","components/button/Button.jsx","components/timerConfig/TimerConfig.jsx","utils/helpers.js","utils/pomodoroStates.js","components/timerDisplay/TimerDisplay.jsx","components/timerStart/TimerStart.jsx","components/timerReset/TimerReset.jsx","components/soundConfig/SoundConfig.jsx","utils/timer.js","utils/timerStates.js","components/app/App.jsx","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","Footer","href","Button","_ref","id","name","value","isDisabled","buttonClick","className","disabled","type","onClick","defaultProps","TimerConfig","handleDecrementTime","_this$props","_this","props","pomodoroState","sessionTime","setTimeState","newTime","updateTimesValidations","handleIncrementTime","_this$props2","currentTimeLeft","breakTime","_this$props3","this","buttonsDisabled","concat","charAt","toUpperCase","slice","button_Button","secs","minutes","Math","floor","toMM","React","Component","SESSION","BREAK","TimerDisplay","label","timeLeft","pomodoroStates","Fragment","seconds","toString","padStart","toMMSS","TimerStart","TimerReset","SoundConfig","sound","setSound","htmlFor","checked","onChange","countDownInterval","startTimer","tick","timerFinished","then","round","Date","now","setInterval","secondsLeft","stopTimer","clearInterval","PAUSED","RUNNING","defaultSessionTime","defaultBreakTime","defaultCurrentTimeLeft","defaultPomodoroState","defaultTimerState","timerStates","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","obj","setState","_this$state","state","audioBeep","play","handleStartButton","_this$state2","timerState","startButtonValue","handleReset","pause","currentTime","audioRef","createRef","_this2","_this$state3","soundOn","header_Header","timerDisplay_TimerDisplay","components_timerConfig_TimerConfig","timerStart_TimerStart","timerReset_TimerReset","soundConfig_SoundConfig","preload","ref","audio","src","oggfile","mp3file","kind","default","srcLang","captionfile","footer_Footer","ReactDOM","render","components_app_App","document","getElementById"],"mappings":"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","file":"static/js/main.466f0fd4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/alarm-sound.1cd6ea46.mp3\";","module.exports = __webpack_public_path__ + \"static/media/alarm-sound.fed2ed0b.ogg\";","module.exports = __webpack_public_path__ + \"static/media/captions.dce4e024.vtt\";","import React from 'react';\nimport './Header.css';\n\nfunction Header() {\n  return (\n    <header>\n      <h1>Pomodoro timer</h1>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport './Footer.css';\n\nfunction Footer() {\n  return (\n    <footer>\n      by\n      <a href=\"http://beinnor.github.io/\"> Beinnor </a>\n      2019\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Button.css';\n\nfunction Button({ id, name, value, isDisabled, buttonClick }) {\n  return (\n    <button className={name} id={id} disabled={isDisabled} type=\"button\" onClick={buttonClick}>\n      {value}\n    </button>\n  );\n}\n\nButton.defaultProps = {\n  name: 'button',\n  isDisabled: false\n};\n\nButton.propTypes = {\n  id: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  buttonClick: PropTypes.func.isRequired,\n  name: PropTypes.string,\n  isDisabled: PropTypes.bool\n};\n\nexport default Button;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './TimerConfig.css';\nimport Button from '../button';\nimport { toMM } from '../../utils/helpers';\n\nclass TimerConfig extends React.Component {\n  handleDecrementTime = () => {\n    const { name, pomodoroState, sessionTime, setTimeState } = this.props;\n    if (sessionTime > 60) {\n      const newTime = sessionTime - 60;\n      return this.updateTimesValidations(name, newTime, pomodoroState, setTimeState);\n    }\n    return false;\n  };\n\n  handleIncrementTime = () => {\n    const { name, pomodoroState, sessionTime, setTimeState } = this.props;\n    if (sessionTime < 3600) {\n      const newTime = sessionTime + 60;\n      return this.updateTimesValidations(name, newTime, pomodoroState, setTimeState);\n    }\n    return false;\n  };\n\n  updateTimesValidations = (name, newTime, pomodoroState, setTimeState) => {\n    if (name === 'session') {\n      return setTimeState({ sessionTime: newTime, currentTimeLeft: newTime });\n    }\n    if (name === 'break') {\n      return setTimeState({ breakTime: newTime, currentTimeLeft: newTime });\n    }\n    return false;\n  };\n\n  render() {\n    const { name, sessionTime, buttonsDisabled } = this.props;\n\n    return (\n      <div className=\"config\" id={`${name}Config`}>\n        <div className=\"configLabel\" id={`${name}-label`}>\n          {`${name.charAt(0).toUpperCase() + name.slice(1)} Length`}\n        </div>\n        <Button\n          name=\"configMinusButton\"\n          id={`${name}-decrement`}\n          value=\"-\"\n          isDisabled={buttonsDisabled}\n          buttonClick={this.handleDecrementTime}\n        />\n        <span className=\"configLength\" id={`${name}-length`}>\n          {toMM(sessionTime)}\n        </span>\n        <Button\n          name=\"configPlusButton\"\n          id={`${name}-increment`}\n          value=\"+\"\n          isDisabled={buttonsDisabled}\n          buttonClick={this.handleIncrementTime}\n        />\n      </div>\n    );\n  }\n}\n\nTimerConfig.propTypes = {\n  name: PropTypes.string.isRequired,\n  setTimeState: PropTypes.func.isRequired,\n  pomodoroState: PropTypes.number.isRequired,\n  sessionTime: PropTypes.number.isRequired,\n  buttonsDisabled: PropTypes.bool.isRequired\n};\n\nexport default TimerConfig;\n","export function toMMSS(secs) {\n  let minutes;\n  let seconds;\n\n  if (secs === 3600) {\n    minutes = 60;\n    seconds = 0;\n  } else {\n    minutes = Math.floor(secs / 60) % 60;\n    seconds = secs % 60;\n  }\n\n  return `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;\n}\n\nexport function toMM(secs) {\n  const minutes = Math.floor(secs / 60);\n\n  return `${minutes}`;\n}\n","export const SESSION = 1;\nexport const BREAK = 2;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './TimerDisplay.css';\nimport { toMMSS } from '../../utils/helpers';\nimport * as pomodoroStates from '../../utils/pomodoroStates';\n\nfunction TimerDisplay({ pomodoroState, timeLeft }) {\n  let label;\n\n  switch (pomodoroState) {\n    case pomodoroStates.SESSION:\n      label = 'Session';\n      break;\n    case pomodoroStates.BREAK:\n      label = 'Break';\n      break;\n    default:\n      label = 'Session';\n      break;\n  }\n\n  return (\n    <>\n      <div id=\"timer-label\">{label}</div>\n      <div id=\"time-left\">{toMMSS(timeLeft)}</div>\n    </>\n  );\n}\n\nTimerDisplay.propTypes = {\n  pomodoroState: PropTypes.number.isRequired,\n  timeLeft: PropTypes.number.isRequired\n};\n\nexport default TimerDisplay;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '../button';\nimport './TimerStart.css';\n\nfunction TimerStart({ buttonClick, value }) {\n  return <Button id=\"start_stop\" value={value} buttonClick={buttonClick} />;\n}\n\nTimerStart.propTypes = {\n  buttonClick: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired\n};\n\nexport default TimerStart;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '../button';\nimport './TimerReset.css';\n\nfunction TimerReset({ buttonClick }) {\n  return <Button id=\"reset\" value=\"Reset\" isDisabled={false} buttonClick={buttonClick} />;\n}\n\nTimerReset.propTypes = {\n  buttonClick: PropTypes.func.isRequired\n};\n\nexport default TimerReset;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './SoundConfig.css';\n\nfunction SoundConfig({ sound, setSound }) {\n  const toggleSound = () => {\n    if (sound === true) {\n      setSound(false);\n    } else {\n      setSound(true);\n    }\n  };\n\n  return (\n    <div id=\"SoundConfig\">\n      <label htmlFor=\"switch\">\n        Sound:\n        <div className=\"switch\">\n          <input type=\"checkbox\" id=\"switch\" checked={sound} onChange={toggleSound} />\n          <span className=\"slider\" />\n        </div>\n      </label>\n    </div>\n  );\n}\n\nSoundConfig.propTypes = {\n  sound: PropTypes.bool.isRequired,\n  setSound: PropTypes.func.isRequired\n};\n\nexport default SoundConfig;\n","let countDownInterval = null;\n\nexport const startTimer = (seconds, tick, timerFinished) => {\n  const now = Math.round(Date.now() / 1000);\n  const then = now + seconds;\n\n  tick(Math.round(then - Date.now() / 1000));\n  countDownInterval = setInterval(() => {\n    const secondsLeft = Math.round(then - Date.now() / 1000);\n    if (secondsLeft < 0) {\n      return timerFinished();\n    }\n\n    return tick(secondsLeft);\n  }, 1000);\n  return true;\n};\n\nexport const stopTimer = () => {\n  clearInterval(countDownInterval);\n};\n","export const PAUSED = 1;\nexport const RUNNING = 2;\n","import React from 'react';\nimport './App.css';\nimport Header from './header';\nimport Footer from './footer';\nimport TimerConfig from '../timerConfig';\nimport TimerDisplay from '../timerDisplay';\nimport TimerStart from '../timerStart';\nimport TimerReset from '../timerReset';\nimport SoundConfig from '../soundConfig';\nimport mp3file from '../../assets/alarm-sound.mp3';\nimport oggfile from '../../assets/alarm-sound.ogg';\nimport captionfile from '../../assets/captions.vtt';\nimport { startTimer, stopTimer } from '../../utils/timer';\nimport * as pomodoroStates from '../../utils/pomodoroStates';\nimport * as timerStates from '../../utils/timerStates';\n\nconst defaultSessionTime = 25 * 60;\nconst defaultBreakTime = 5 * 60;\nconst defaultCurrentTimeLeft = defaultSessionTime;\nconst defaultPomodoroState = pomodoroStates.SESSION;\nconst defaultTimerState = timerStates.PAUSED;\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.audioRef = React.createRef();\n    this.state = {\n      currentTimeLeft: defaultCurrentTimeLeft,\n      sessionTime: defaultSessionTime,\n      breakTime: defaultBreakTime,\n      pomodoroState: defaultPomodoroState,\n      timerState: defaultTimerState,\n      buttonsDisabled: false,\n      sound: true,\n      startButtonValue: 'Start'\n    };\n  }\n\n  setTimeState = obj => {\n    this.setState(obj);\n  };\n\n  tick = secs => {\n    this.setState({ currentTimeLeft: secs });\n  };\n\n  timerFinished = () => {\n    const { sessionTime, breakTime, pomodoroState, sound } = this.state;\n    if (sound) {\n      this.audioBeep.play();\n    }\n    stopTimer();\n    if (pomodoroState === pomodoroStates.SESSION) {\n      this.setState({ pomodoroState: pomodoroStates.BREAK });\n      startTimer(breakTime, this.tick, this.timerFinished);\n      return;\n    }\n    if (pomodoroState === pomodoroStates.BREAK) {\n      this.setState({ pomodoroState: pomodoroStates.SESSION });\n      startTimer(sessionTime, this.tick, this.timerFinished);\n    }\n  };\n\n  handleStartButton = () => {\n    const { timerState, currentTimeLeft } = this.state;\n\n    if (timerState === timerStates.PAUSED) {\n      this.setState({\n        timerState: timerStates.RUNNING,\n        buttonsDisabled: true,\n        startButtonValue: 'Stop'\n      });\n      startTimer(currentTimeLeft, this.tick, this.timerFinished);\n    }\n\n    if (timerState === timerStates.RUNNING) {\n      this.setState({\n        timerState: timerStates.PAUSED,\n        buttonsDisabled: false,\n        startButtonValue: 'Start'\n      });\n      stopTimer();\n    }\n  };\n\n  handleReset = () => {\n    stopTimer();\n    this.setState({\n      currentTimeLeft: defaultCurrentTimeLeft,\n      sessionTime: defaultSessionTime,\n      breakTime: defaultBreakTime,\n      pomodoroState: pomodoroStates.SESSION,\n      timerState: timerStates.PAUSED,\n      buttonsDisabled: false,\n      sound: true,\n      startButtonValue: 'Start'\n    });\n    this.audioBeep.pause();\n    this.audioBeep.currentTime = 0;\n  };\n\n  render() {\n    const {\n      pomodoroState,\n      currentTimeLeft,\n      sessionTime,\n      breakTime,\n      sound: soundOn,\n      startButtonValue,\n      buttonsDisabled\n    } = this.state;\n    return (\n      <div className=\"App\">\n        <Header />\n\n        <TimerDisplay pomodoroState={pomodoroState} timeLeft={currentTimeLeft} />\n        <TimerConfig\n          name=\"session\"\n          pomodoroState={pomodoroState}\n          sessionTime={sessionTime}\n          buttonsDisabled={buttonsDisabled}\n          setTimeState={this.setTimeState}\n        />\n        <TimerConfig\n          name=\"break\"\n          pomodoroState={pomodoroState}\n          sessionTime={breakTime}\n          buttonsDisabled={buttonsDisabled}\n          setTimeState={this.setTimeState}\n        />\n        <TimerStart buttonClick={this.handleStartButton} value={startButtonValue} />\n        <TimerReset buttonClick={this.handleReset} />\n        <SoundConfig\n          sound={soundOn}\n          setSound={sound => {\n            this.setState({ sound });\n          }}\n        />\n        <audio\n          id=\"beep\"\n          preload=\"auto\"\n          ref={audio => {\n            this.audioBeep = audio;\n          }}\n        >\n          <source src={oggfile} type=\"audio/ogg\" />\n          <source src={mp3file} type=\"audio/mpeg\" />\n          <track kind=\"captions\" default srcLang=\"en\" src={captionfile} />\n        </audio>\n\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","/* eslint-disable react/jsx-filename-extension */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}